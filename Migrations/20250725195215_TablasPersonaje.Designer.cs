// <auto-generated />
using System;
using EldaraaApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EldaraaApi.Migrations
{
    [DbContext(typeof(EldaraaDbContext))]
    [Migration("20250725195215_TablasPersonaje")]
    partial class TablasPersonaje
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("EldaraaApi.Models.AtributoPersonalizado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Detalles")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sistema")
                        .HasColumnType("TEXT");

                    b.Property<string>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeId");

                    b.ToTable("AtributosPersonalizados");
                });

            modelBuilder.Entity("EldaraaApi.Models.Civilizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Civilizaciones");
                });

            modelBuilder.Entity("EldaraaApi.Models.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DadoGolpe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LanzadorConjuros")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("EldaraaApi.Models.EntradaLibre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeId");

                    b.ToTable("EntradasLibres");
                });

            modelBuilder.Entity("EldaraaApi.Models.Equipamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Costo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float?>("Peso")
                        .HasColumnType("REAL");

                    b.Property<string>("Propiedades")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipamientos");
                });

            modelBuilder.Entity("EldaraaApi.Models.EstadisticasCombate", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BonoAtaqueConjuros")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClaseArmadura")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DadosGolpe")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DificultadSalvacionConjuros")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HabilidadLanzamientoConjuros")
                        .HasColumnType("TEXT");

                    b.Property<int>("Iniciativa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PuntosGolpeActuales")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PuntosGolpeMaximos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Velocidad")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonajeId");

                    b.ToTable("EstadisticasCombate");
                });

            modelBuilder.Entity("EldaraaApi.Models.Habilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HabilidadBase")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("EldaraaApi.Models.Hechizo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alcance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Componentes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Duracion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Escuela")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TiempoConjuro")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hechizos");
                });

            modelBuilder.Entity("EldaraaApi.Models.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("EldaraaApi.Models.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alineamiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Altura")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColorCabello")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColorOjos")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColorPiel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Deidad")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Experiencia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genero")
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoriaPersonal")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inspiracion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreJugador")
                        .HasColumnType("TEXT");

                    b.Property<string>("Peso")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RazaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubrazaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrasfondoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClaseId");

                    b.HasIndex("RazaId");

                    b.HasIndex("SubrazaId");

                    b.HasIndex("TrasfondoId");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("EldaraaApi.Models.PersonajeEquipamiento", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipamientoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Equipado")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonajeId", "EquipamientoId");

                    b.HasIndex("EquipamientoId");

                    b.ToTable("PersonajesEquipamiento");
                });

            modelBuilder.Entity("EldaraaApi.Models.PersonajeHabilidad", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Competente")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonajeId", "HabilidadId");

                    b.HasIndex("HabilidadId");

                    b.ToTable("PersonajesHabilidad");
                });

            modelBuilder.Entity("EldaraaApi.Models.PersonajeHechizo", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HechizoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Preparado")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonajeId", "HechizoId");

                    b.HasIndex("HechizoId");

                    b.ToTable("PersonajesHechizo");
                });

            modelBuilder.Entity("EldaraaApi.Models.PuntuacionHabilidades", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Carisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Constitucion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Destreza")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fuerza")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Inteligencia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sabiduria")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonajeId");

                    b.ToTable("PuntuacionesHabilidades");
                });

            modelBuilder.Entity("EldaraaApi.Models.RasgosPersonalidad", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Defecto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ideal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rasgo1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rasgo2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vinculo")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonajeId");

                    b.ToTable("RasgosPersonalidades");
                });

            modelBuilder.Entity("EldaraaApi.Models.Raza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Razas");
                });

            modelBuilder.Entity("EldaraaApi.Models.Subraza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RazaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RazaId");

                    b.ToTable("Subrazas");
                });

            modelBuilder.Entity("EldaraaApi.Models.Trasfondo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caracteristica")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trasfondos");
                });

            modelBuilder.Entity("EldaraaApi.Models.AtributoPersonalizado", b =>
                {
                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany("AtributosPersonalizados")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.EntradaLibre", b =>
                {
                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany("EntradasLibres")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.EstadisticasCombate", b =>
                {
                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.Personaje", b =>
                {
                    b.HasOne("EldaraaApi.Models.Clase", "Clase")
                        .WithMany("Personajes")
                        .HasForeignKey("ClaseId");

                    b.HasOne("EldaraaApi.Models.Raza", "Raza")
                        .WithMany("Personajes")
                        .HasForeignKey("RazaId");

                    b.HasOne("EldaraaApi.Models.Subraza", "Subraza")
                        .WithMany("Personajes")
                        .HasForeignKey("SubrazaId");

                    b.HasOne("EldaraaApi.Models.Trasfondo", "Trasfondo")
                        .WithMany("Personajes")
                        .HasForeignKey("TrasfondoId");

                    b.Navigation("Clase");

                    b.Navigation("Raza");

                    b.Navigation("Subraza");

                    b.Navigation("Trasfondo");
                });

            modelBuilder.Entity("EldaraaApi.Models.PersonajeEquipamiento", b =>
                {
                    b.HasOne("EldaraaApi.Models.Equipamiento", "Equipamiento")
                        .WithMany("PersonajesEquipamiento")
                        .HasForeignKey("EquipamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamiento");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.PersonajeHabilidad", b =>
                {
                    b.HasOne("EldaraaApi.Models.Habilidad", "Habilidad")
                        .WithMany("PersonajesHabilidad")
                        .HasForeignKey("HabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habilidad");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.PersonajeHechizo", b =>
                {
                    b.HasOne("EldaraaApi.Models.Hechizo", "Hechizo")
                        .WithMany("PersonajesHechizo")
                        .HasForeignKey("HechizoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hechizo");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.PuntuacionHabilidades", b =>
                {
                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.RasgosPersonalidad", b =>
                {
                    b.HasOne("EldaraaApi.Models.Personaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("EldaraaApi.Models.Subraza", b =>
                {
                    b.HasOne("EldaraaApi.Models.Raza", "Raza")
                        .WithMany("Subrazas")
                        .HasForeignKey("RazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raza");
                });

            modelBuilder.Entity("EldaraaApi.Models.Clase", b =>
                {
                    b.Navigation("Personajes");
                });

            modelBuilder.Entity("EldaraaApi.Models.Equipamiento", b =>
                {
                    b.Navigation("PersonajesEquipamiento");
                });

            modelBuilder.Entity("EldaraaApi.Models.Habilidad", b =>
                {
                    b.Navigation("PersonajesHabilidad");
                });

            modelBuilder.Entity("EldaraaApi.Models.Hechizo", b =>
                {
                    b.Navigation("PersonajesHechizo");
                });

            modelBuilder.Entity("EldaraaApi.Models.Personaje", b =>
                {
                    b.Navigation("AtributosPersonalizados");

                    b.Navigation("EntradasLibres");
                });

            modelBuilder.Entity("EldaraaApi.Models.Raza", b =>
                {
                    b.Navigation("Personajes");

                    b.Navigation("Subrazas");
                });

            modelBuilder.Entity("EldaraaApi.Models.Subraza", b =>
                {
                    b.Navigation("Personajes");
                });

            modelBuilder.Entity("EldaraaApi.Models.Trasfondo", b =>
                {
                    b.Navigation("Personajes");
                });
#pragma warning restore 612, 618
        }
    }
}
